# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

#RUN cd /etc/yum.repos.d/ \
#    && sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* \
#    && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*


#RUN if [ $(command -v dnf) ]; then dnf update libmodulemd &&  dnf makecache && dnf --assumeyes upgrade && dnf --assumeyes install python3 sudo python3-devel python*-dnf bash iproute && dnf clean all; \
#    elif [ $(command -v yum) ]; then yum update libmodulemd && sed -i 's/^\(tsflags=*\)/# \1/g' /etc/yum.conf && yum makecache fast && yum upgrade -y && yum makecache fast && yum install -y sudo python3 systemd systemd-sysv  rsyslog man yum-plugin-ovl bash iproute && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
#    fi

RUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && \
sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-* && \
dnf update libmodulemd -y && dnf update -y --nobest &&  dnf -y install python3 sudo python3-devel python*-dnf \
bash iproute systemd systemd-sysv systemd-container.x86_64 initscripts && dnf clean all && ln -s /lib/systemd/systemd /bin/systemd
# &&  rm -r /var/cache/dnf && dnf upgrade -y --nobest

#RUN set -xe \

  RUN if getent group ${ANSIBLE_USER}; then echo "${ANSIBLE_USER} - Присутствует"; else groupadd -r ${ANSIBLE_USER}; fi \
  && if getent group ${DEPLOY_GROUP}; then echo "${DEPLOY_GROUP} - Присутствует"; else groupadd -r ${DEPLOY_GROUP}; fi \
  && if getent user ${ANSIBLE_USER}; then echo "${ANSIBLE_USER} - Присутствует"; else useradd -m -g ${ANSIBLE_USER} ${ANSIBLE_USER}; \
  && usermod -aG ${DEPLOY_GROUP} ${ANSIBLE_USER} \
  && echo "%${DEPLOY_GROUP} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/ansible


#RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
#    systemd-tmpfiles-setup.service ] || rm -f $i; done); \
#RUN rm -rf /lib/systemd/system/sysinit.target.wants/*systemd-tmpfiles-setup.service; \
#    rm -rf /lib/systemd/system/multi-user.target.wants/*;\
#    rm -rf /etc/systemd/system/*.wants/*;\
#    rm -rf /lib/systemd/system/local-fs.target.wants/*; \
#    rm -rf /lib/systemd/system/sockets.target.wants/*udev*; \
#    rm -rf /lib/systemd/system/sockets.target.wants/*initctl*; \
#    rm -rf /lib/systemd/system/basic.target.wants/*;\
#    rm -rf /lib/systemd/system/anaconda.target.wants/*;
    # systemctl enable dbus.socket; \
    # systemctl enable dbus.service; \
    # systemctl enable rsyslog.service

#VOLUME [ "/sys/fs/cgroup" ]
#CMD ["{{ item.command | default('/usr/sbin/init') }}"]


#RUN systemctl set-default multi-user.target

CMD [ "/usr/bin/systemd", "log-level=info", "unit=default.target" ]