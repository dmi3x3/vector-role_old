# Molecule managed

<<<<<<< HEAD
{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}
=======
FROM docker.io/monolithprojects/systemd-centos8:latest

ENV ANSIBLE_USER ansible
ENV DEPLOY_GROUP deployer
ENV SUDO_GROUP wheel
ENV container docker
>>>>>>> refs/remotes/origin/main

RUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && \
sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-* && \
dnf update libmodulemd -y && dnf update -y --nobest &&  dnf -y install python3 sudo python3-devel python*-dnf \
<<<<<<< HEAD
bash iproute systemd systemd-sysv systemd-container.x86_64 initscripts && dnf clean all && ln -s /lib/systemd/systemd /bin/systemd
# &&  rm -r /var/cache/dnf && dnf upgrade -y --nobest

RUN if [ $(command -v apt) ]; then apt update && apt upgrade -y && apt install -y apt-transport-https gnupg2 python3-minimal python3-apt man systemd systemd-sysv dbus-user-session rsyslog sudo bash ca-certificates iproute2 && apt clean; \
    elif [ $(command -v dnf) ]; then dnf makecache && dnf --assumeyes upgrade && dnf --assumeyes install python3 sudo python3-devel python*-dnf bash iproute && dnf clean all; \
    elif [ $(command -v yum) ]; then sed -i 's/^\(tsflags=*\)/# \1/g' /etc/yum.conf && yum makecache fast && yum upgrade -y && yum makecache fast && yum install -y sudo python3 systemd rsyslog man yum-plugin-ovl bash iproute && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
    elif [ $(command -v zypper) ]; then zypper refresh && zypper install -y python sudo bash python-xml iproute2 && zypper clean -a; \
    elif [ $(command -v apk) ]; then apk update && apk add --no-cache python sudo bash ca-certificates; \
    elif [ $(command -v xbps-install) ]; then xbps-install -Syu && xbps-install -y python sudo bash ca-certificates iproute2 && xbps-remove -O; fi

# RUN set -xe \
# &&

  RUN if getent group ${ANSIBLE_USER}; then echo "${ANSIBLE_USER} - Присутствует"; else groupadd -r ${ANSIBLE_USER}; fi \
  && if getent group ${DEPLOY_GROUP}; then echo "${DEPLOY_GROUP} - Присутствует"; else groupadd -r ${DEPLOY_GROUP}; fi \
  && if getent user ${ANSIBLE_USER}; then echo "${ANSIBLE_USER} - Присутствует"; else useradd -m -g ${ANSIBLE_USER} ${ANSIBLE_USER}; \
  && usermod -aG ${DEPLOY_GROUP} ${ANSIBLE_USER} \
  && echo "%${DEPLOY_GROUP} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/ansible

RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
    systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -rf /lib/systemd/system/multi-user.target.wants/*;\
    rm -rf /etc/systemd/system/*.wants/*;\
    rm -rf /lib/systemd/system/local-fs.target.wants/*; \
    rm -rf /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -rf /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -rf /lib/systemd/system/basic.target.wants/*;\
    rm -rf /lib/systemd/system/anaconda.target.wants/*;
    # systemctl enable dbus.socket; \
    # systemctl enable dbus.service; \
    # systemctl enable rsyslog.service

#VOLUME [ "/sys/fs/cgroup" ]
#CMD ["{{ item.command | default('/sbin/init') }}"]

RUN systemctl set-default multi-user.target

CMD [ "/lib/systemd/systemd", "log-level=info", "unit=sysinit.target" ]
=======
bash curl iproute systemd systemd-sysv systemd-container.x86_64 initscripts && dnf clean all && ln -s /lib/systemd/systemd /bin/systemd

RUN if [ $(command -v apt-get) ]; then export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y python3 sudo bash curl ca-certificates iproute2 python3-apt aptitude && apt-get clean && rm -rf /var/lib/apt/lists/*; \
    elif [ $(command -v dnf) ]; then dnf makecache && dnf --assumeyes install /usr/bin/python3 /usr/bin/python3-config /usr/bin/dnf-3 sudo bash curl iproute && dnf clean all; \
    elif [ $(command -v yum) ]; then yum makecache fast && yum install -y /usr/bin/python /usr/bin/python2-config sudo yum-plugin-ovl bash curl iproute && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
    elif [ $(command -v zypper) ]; then zypper refresh && zypper install -y python3 sudo bash curl iproute2 && zypper clean -a; \
    elif [ $(command -v apk) ]; then apk update && apk add --no-cache python3 sudo bash curl ca-certificates; \
    elif [ $(command -v xbps-install) ]; then xbps-install -Syu && xbps-install -y python3 sudo bash curl ca-certificates iproute2 && xbps-remove -O; fi

RUN curl https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl3.py > /usr/bin/systemctl \
&& chmod u+x /usr/bin/systemctl && mkdir -p /run/systemd/system

CMD /usr/bin/systemctl
>>>>>>> refs/remotes/origin/main
